PROBLEM:


Given a single linked list of size M, your task is to complete the function sumOfLastN_Nodes(), which should return the sum of last N nodes of the linked list.

Input:
The function takes two arguments as input, the reference pointer to the head of the linked list and the an integer N.
There will be T test cases and for each test case the function will be called seperately.

Output:
For each test case output the sum of last N nodes of the linked list.

Constraints:
1<=T<=100
1<=N<=M<=1000

Example:
Input:
2
6 3
5 9 6 3 4 10
2 2
1 2

Output:
17
3

Explanation:
Testcase 1: Sum of last three nodes in the linked list is 3 + 4 + 10 = 17.



SOLUTION:


JAVA CODE:



class Solution {
    
    //Return the sum of last k nodes
    public int sum(Node head, int k){
      //write code here
      
              
           Node temp=head;
        int count=0;
        int sum=0;
        while(temp!=null){
        temp=temp.next;
        count++;
        }
        int j=count-k;
        int i=0;
        while(head!=null){
        if(i>=j){
        sum=sum+head.data;
        }
        i++;
        head=head.next;
        }
        return sum;
}
}
