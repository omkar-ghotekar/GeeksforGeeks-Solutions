PROBLEM:


Given two numbers represented by two linked lists, write a function that returns Sum list. The sum list is linked list representation of addition of two input numbers.

Example 1:

Input:
S1 = 3, S2 = 3
ValueS1 = {2,3,4}
ValueS2 = {3,4,5}
Output: 5 7 9
Explanation: After adding the 2 numbers
the resultant number is 5 7 9.
Example 2:

Input:
S1 = 1, S2 = 2
ValueS1 = {9}
ValueS2 = {8,7}
Output: 9 6
Explanation: Add 9 and 7 we get 16.
1 is carry here and is added to 8.
So the answer is 9 6
Your Task:
The task is to complete the function addSameSize() addCarryToRemaining().

Constraints:
1 <= S1, S2 <= 100


SOLUTION:


JAVA CODE:



//User function Template for Java

 
/*class Node 
{
    int data;
    Node next;
    
    Node(int data)
    {
        this.data = data;
        next = null;
    }
}*/
class GfG {

    Node cur; // Dont change the variable name, its used in main function
    int carry; // Dont change the variable name, its used in main function
    void addCarryToRemaining(Node head, LinkedList res)  { 
        // Write code here
        if(head!=cur)
        {
            addCarryToRemaining(head.next,res);
            int sum=carry+head.data;
            carry=sum/10;
            sum=sum%10;
            
            res.push(sum);
        }
    } 
    
	void addSameSize(Node head1, Node head2, LinkedList res) { 
	    // Write code here
	    
	    if(head1==null)
	    {
	        return;
	    }
	    addSameSize(head1.next,head2.next,res);
	    int sum=head1.data+head2.data+carry;
	    carry=sum/10;
	    sum=sum%10;
	    res.push(sum);
    }
}
