PROBLEM:


A boy lost the password of his super locker. He remembers the number of digits N as well as the sum S of all the digits of his password. He know that his password is the largest number of N digits that can be possible with given sum S. As he is busy doing his homework, help him retrieving his password.

Example 1:

Input:
N = 5, S = 12
Output: 93000
Explanation: Sum of elements is 12.
Largest possible 5 digit number is 93000.
Example 2:

Input:
N = 3, S = 29
Output: -1
Explanation: There is no such three digit
number whose sum is 29.
Your Task : 
Complete the function largestnumber() that returns  the largest possible strings as answer, -1 otherwise.

Constraints:
1 <= N <= 104
0 <= S <= 106

Expected Time Complexity : O(N)
Expected Auxilliary Space : O(1)



SOLUTION:


JAVA CODE:


class Solution
{
    // Function to return Largest Number
    static String largestNumber(int n, int sum)
    {
        String ans = "";
        while (sum > 0 && n > 0) {
        if (sum >= 9) {
        ans = ans + "9";
        sum = sum - 9;
        n--;
        }
        else {
        ans = ans + sum;
        sum = 0;
        n--;
        }
        }
        if (sum > 0) {
        return "-1";
        }
        
        while (n != 0) {
        ans = ans + 0;
        n--;
        }
        
        return ans;
}
}
