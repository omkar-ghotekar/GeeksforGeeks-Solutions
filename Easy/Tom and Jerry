PROBLEM:


Tom and Jerry play a game with a number N. They will play the game alternatively and each of them would subtract a number n [n such that N%n = 0. 
The game is repeated turn by turn until the one, who now cannot make a further move loses the game. The game begins with Tom playing the first move. It is well understood that both of them will make moves in an optimal way. The task is to determine who wins the game.

 

Example 1:


Input:
N = 2
Output:
1
Explanation:
Tom subtracts 1 from N to make N = 1.
Now, Jerry isn't left with any possible
turn so Tom wins the game, and therefore
the Output is 1.
Example 2:


Input:
N = 4
Output:
1
Explanation:
Tom wins the game if he plays optimally.
 

Your Task:
You don't need to read input or print anything. Your task is to complete the function numsGame() which takes an Integer N as input and returns 1 if Tom wins else returns 0.

 

Expected Time Complexity: O(1)
Expected Auxiliary Space: O(1)

 

Constraints:
1 ≤ N ≤ 108



SOLUTION:


JAVA CODE:



//User function Template for Java

class Solution {
    static int numsGame(int N) {
        // code here
        if(N%2==0)
        {
            return 1;
        }
        return 0;
    }
};
