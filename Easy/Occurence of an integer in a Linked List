PROBLEM:


Given a singly linked list and a key, count the number of occurrences of given key in the linked list.

Example 1:

Input:
N = 7
Link List = 1->2->1->2->1->3->1
search_for = 1
Output: 4
Explanation:1 appears 4 times.
 

Your Task:

You dont need to read input or print anything. Complete the function count() which takes the head of the link list and search_for i.e- the key as input parameters and returns the count of occurrences of the given key.

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

Constraints:
0 ≤ N ≤ 10^4



SOLUTION:


JAVA CODE:


// complete the below function
class GfG
{
    public static int count(Node head, int search_for)
    {
        Node root=head;
        int count=0;
        
        while(root!=null)
        {
            if(root.data==search_for)
            {
                count++;
            }
            root=root.next;
            
        }
        return count;
        
        
    }
}
